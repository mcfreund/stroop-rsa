%% about ----
%% mike freund, 2019-03-12

\documentclass{article}
\usepackage[margin = 0.5in]{geometry}
\usepackage{hyperref}
\usepackage{xcolor}
\usepackage{caption}
\usepackage{amsmath,amssymb}
\usepackage[natbibapa]{apacite}
\bibliographystyle{apacite}

\renewcommand{\familydefault}{\sfdefault}  %% sans-serif
\DeclareRobustCommand{\bbone}{\text{\usefont{U}{bbold}{m}{n}1}}
\DeclareMathOperator{\EX}{\mathbb{E}}  % expected value

\newcommand*{\mono}{\fontfamily{qcr}\selectfont}
\begin{document}

\title{brain behavior correlation analyses of proactive Stroop data, DMCC2}
\author{mike freund}
\date{\today}
\maketitle

\section{outline}


% \begin{enumerate}
%   \item test association between stroop effect (response times) and task dimension coding (target, distractor, congruency) within ROIs.
%   multiple statistical methods will be used:
%     \begin{itemize}
%       \item bivariate skipped spearman's with 95\% bootstrapped CIs.
%       Skipping (exlusion of extreme multivariate values) gives robustness against bivariate outliers, bootstrapping gives robustness to heteroskadisticity.
%       \item multiple regression of the form $RT \sim \mathit{target} + \mathit{distractor} + \mathit{congruency}$. 
%       models assumptions will be checked and robust or non-parametric procedures conducted if necessary.
%     \end{itemize}
%   \item 
% \end{itemize}


<<setup, echo = FALSE, warning = FALSE, message = FALSE, error = FALSE, results = FALSE>>=

## packages ----
library(knitr)
knitr::opts_chunk$set(
  echo = FALSE, warning = FALSE, message = FALSE, error = FALSE, results = FALSE, cache = TRUE,
  fig.align = "center", dev = "pdf"
)
library(dplyr)
library(data.table)
library(purrr)
library(ggplot2)
theme_set(theme_minimal(base_size = 6))
library(grid)
library(gridExtra)
library(colorspace)
library(here)
library(lme4)
library(tidyr)
library(lattice)
source(here("..", "gen", "funs", "_get_dirs_local.R"))
source(here("..", "gen", "funs", "_funs.R"))
source(here("r", "group-201902", "_get_misc_vars.R"))

## read data ----

## subject list:
group201902.analysis <- fread(file.path(dir.box.stroop.sheets, "subj-sample_group-201902_for-analysis.csv"))$x

## behavioral data:
stroop.pro <- fread(file.path(dir.box.crosstask.sheets, "dmcc2_behavior-and-events-stroop.csv")) %>%
  filter(subj %in% group201902.analysis, session == "pro") %>%
  arrange(subj, session, run, trial.num) %>%
  group_by(subj, session, run) %>%
  mutate(
    er            = 1 - acc,
    post.er       = lag(er),
    n1.trial.type = lag(trial.type),
    n2.trial.type = lag(n1.trial.type)
    )

## subj info:
subj.summary <- fread(file.path(dir.box.crosstask.sheets, "dmcc2_all-runs-summary.csv")) %>% 
  filter(task == "str", subj %in% group201902.analysis)

## represimil matrices:

# rsarray.rank <- readRDS(
#   file.path(dir.box.stroop.data, "rsarray_pearson_mmp_group-201902_pro_bias_acc-only_rank-residual.rds")
#   )
# rsarray.lin <- readRDS(
#   file.path(dir.box.stroop.data, "rsarray_pearson_mmp_group-201902_pro_bias_acc-only_linear-residual.rds")
#   )  ## for non-metric MDS
# rsarray.multiparcel.rank <- readRDS(
#   file.path(dir.box.stroop.data, "rsarray_pearson_mmp_group-201902_pro_bias_acc-only_rank-residual_multiparcel.rds")
#   )
# rsarray.multiparcel.lin <- readRDS(
#   file.path(dir.box.stroop.data, "rsarray_pearson_mmp_group-201902_pro_bias_acc-only_linear-residual_multiparcel.rds")
#   )  ## for non-metric MDS
# rsarray.rank <- rsarray.rank[, , group201902.analysis, , ]
# rsarray.lin <- rsarray.lin[, , group201902.analysis, , ]
# rsarray.multiparcel.rank <- rsarray.multiparcel.rank[, , group201902.analysis, , ]
# rsarray.multiparcel.lin <- rsarray.multiparcel.lin[, , group201902.analysis, , ]

## subject rsa coefficients:
coefs <- fread(
  file.path(dir.box.stroop.stats, "subject-coefs_pcor_rsm-pearson_mmp_group-201902_pro_bias_acc-only_residual.csv")
  ) %>%
  full_join(atlas.key$mmp %>% rename(parcel = "roi"), by = "parcel")  %>%  ## need ROI numbers
  mutate(parcel.hemi = paste0(parcel, "_", hemi))
coefs.multiparcel <- fread(
  file.path(
    dir.box.stroop.stats, 
    "subject-coefs_pcor_rsm-pearson_mmp_group-201902_pro_bias_acc-only_residual_multiparcel.csv"
    )
  ) %>%
  mutate(parcel.hemi = paste0(parcel, "_", hemi))

## summary rsa results:
results <- fread(
  file.path(dir.box.stroop.stats, "parcel-coefs_pcor_rsm-pearson_mmp_group-201902_pro_bias_acc-only_residual.csv")
    ) %>%
  full_join(atlas.key$mmp %>% rename(parcel = "roi"), by = "parcel")  %>%  ## need ROI numbers
  mutate(parcel.hemi = paste0(parcel, "_", hemi)) %>%
  ## create p.adjusted col:
  group_by(variable) %>%
  mutate(
    p.adj.wb = p.adjust(rho.srtest.p, method = "fdr"),
    is.roi   = parcel.hemi %in% rois.mmp$roi.hemi[rois.mmp$dmcc2.taskgen > 1]  ## dmcc2.taskgen == 2 -> most conserv.
    ) %>%
  group_by(variable, is.roi) %>%
  mutate(
    p.adj.roi = p.adjust(rho.srtest.p, method = "fdr"),
    p.adj.roi = ifelse(is.roi, p.adj.roi, p.adj.wb)
    )
results.multiparcel <- fread(
  file.path(
    dir.box.stroop.stats, 
    "parcel-coefs_pcor_rsm-pearson_mmp_group-201902_pro_bias_acc-only_residual_multiparcel.csv"
    )
    ) %>%
  mutate(parcel.hemi = paste0(parcel, "_", hemi)) %>%
  ## create p.adjusted col:
  group_by(variable) %>%
  mutate(
    p.adj = p.adjust(rho.srtest.p, method = "fdr")
    )


## vars ----

color.congruency <- c("i" = "#b2182b", "c" = "#2166ac")
color.session <- c(bas = "#1b9e77", pro = "#d95f02", rea = "#7570b3")
sessions <- c("bas", "pro", "rea")
varnames <- c("congruency", "target", "distractor", "rt")
## parcels included in "multiparcel clusters":
clusters <- list(
  evis.l       = paste0(c("V1", "V2", "V3"), "_l"),
  evis.r       = paste0(c("V1", "V2", "V3"), "_r"),
  vvis.l       = paste0(c("FFC", "VVC", "V8", "VMV3"), "_l"),
  vvis.r       = paste0(c("FFC", "VVC", "V8", "VMV3", "VMV2"), "_r"),
  ips.l        = paste0(c("IP0", "IP1", "LIPd", "VIP", "LIPv", "AIP", "7PC"), "_l"),
  ips.r        = paste0(c("IP0", "IP1", "IP2", "IPS1", "MIP", "LIPd", "LIPv", "AIP", "7PC", "7PL"), "_r"),
  premotorv4.l = paste0(c("PEF", "6v", "6r", "43", "4"), "_l"),
  premotorv4.r = paste0(c("PEF", "6v", "6r", "43", "4"), "_r"),
  premotorv.l  = paste0(c("PEF", "6v", "6r", "43"), "_l"),
  premotorv.r  = paste0(c("PEF", "6v", "6r", "43"), "_r"),
  premotor.l  = paste0(c("FEF", "55b", "PEF", "6v", "6r", "43", "6d"), "_l"),
  premotor.r  = paste0(c("FEF", "55b", "PEF", "6v", "6r", "43", "6a"), "_r"),
  dlpfc.l      = paste0(c("p9-46v", "8C", "8Av", "i6-8"), "_l"),
  dlpfc.r      = paste0(c("p9-46v", "8C", "8Av", "i6-8"), "_r"),
  mpfc.l       = paste0(c("a32pr", "p32pr", "8BM", "SCEF"), "_l"),
  mpfc.r       = paste0(c("a32pr", "p32pr", "8BM", "SCEF"), "_r"),
  ins.l        = paste0(c("FOP4", "FOP5", "FOP3"), "_l"),
  ins.r        = paste0(c("FOP4", "FOP5", "FOP3"), "_r"),
  ifc.l        = paste0(c("44", "45", "IFSa", "IFSp", "p47r", "p47l"), "_l"),
  ifc.r        = paste0(c("44", "45", "IFSa", "IFSp", "p47r", "p47l"), "_r"),
  lang.l       = paste0(c("PSL", "55b", "44", "45", "SFL"), "_l"),
  lang.r       = paste0(c("PSL", "55b", "44", "45", "SFL"), "_r")
)
cluster.regions <- unique(gsub("(.*)\\..*", "\\1", names(clusters)))


## lattice options ----

lw <- list(left.padding = list(x = 0, units = "inches"))
lw$right.padding <- list(x = 0, units = "inches")
lh <- list(bottom.padding = list(x = 0, units = "inches"))
lh$top.padding <- list(x = 0.1, units = "inches")
lattice.options(layout.widths = lw, layout.heights = lh)
my.settings <- list(
  par.main.text = list(
    font = 2, # make it bold
    just = "left", 
    x = grid::unit(5, "mm"))
  )

## funcs ----

plot.pairs <- function(.df, .region) {
  ## wrapper for pairs function
  
  .df %>%
    filter(parcel == .region) %>%
    select(rt, rho, variable, hemi) %>%
    tidyr::spread(variable, rho) %>%
    lattice::splom(
      ~ .[c("rt", "congruency", "target", "distractor")] | hemi, 
      data = ., 
      main = .region, 
      xlab = NULL, 
      pscales = 0, 
      pch = 16,
      cex = 0.45,
      varname.cex = 0.7,
      par.settings = my.settings,
      lower.panel = function(x, y, ...) {
        panel.text(
          sum(range(x)) / 2, 
          sum(range(y)) / 2, 
          round(cor(x, y), 2), cex = 0.5)
      }
    )
  
}

plot.bivar <- function(.d = coefs, .variable, .parcel.hemi, .statistic = "spearman") {
  ## C:\local\R01\freund\stroop-rsa\r\group-201812\b-b-multreg_2018_11_08
  # .d = d.mmp; .variable = "rho"; .statistic = "spearman"
  
  .d <- .d %>% filter(variable == .variable, parcel.hemi == .parcel.hemi)
  names(.d)[names(.d) == "rho"] <- .variable
  
  if (nrow(.d) > length(group201902.analysis)) stop("too many rows")
  
  ## get cors and outliers
  skipcors <- skipcor(.d$rt, .d[[.variable]])[.statistic, ]
  outlier.subjs <- .d[outpro(.d[c("rt", .variable)])$outliers, "subj"]
  
  ## rank if spearman (for plot)
  if (.statistic == "spearman") {
    .d[c("rt", .variable)] <- .d[c("rt", .variable)] %>% apply(2, rank)
  }
  
  ## for plotting CIs:
  centroids <- .d %>%
    select(subj, rt, one_of(.variable)) %>%
    filter(!subj %in% outlier.subjs) %>%
    summarize_if(is.numeric, mean)
  sdevs <- .d %>%
    select(subj, rt, one_of(.variable)) %>%
    filter(!subj %in% outlier.subjs) %>%
    summarize_if(is.numeric, sd)
  sf <- sdevs[["rt"]] / sdevs[[.variable]]
  r <- skipcors
  slopes <- r * sf  ## slope
  y <- centroids[["rt"]]
  x <- centroids[[.variable]]
  intercepts <- y - r * sf * x  ## intercept
  
  ## plot:
  .d %>%
    ggplot(aes_string(.variable, "rt")) +
    geom_point(aes(color = subj %in% outlier.subjs), size = 0.75) +
    scale_color_manual(values = c("TRUE" = "red", "FALSE" = "black")) +
    geom_text(aes(label = ifelse(subj %in% outlier.subjs, subj, "")), nudge_y = 0.1, size = 1.5) +
    geom_smooth(
      data = .d %>% filter(!subj %in% outlier.subjs),
      method = "lm", se = FALSE
    ) +
    geom_abline(
      slope = slopes["lb"],
      intercept = intercepts["lb"],
      linetype = "dashed", color = "grey40"
    ) +
    geom_abline(
      slope = slopes["ub"],
      intercept = intercepts["ub"],
      linetype = "dashed", color = "grey40"
    ) +
    theme(legend.position = "none", panel.grid = element_blank()) +
    annotate(
      geom = "text",
      x = Inf, y = -Inf, hjust = 1, vjust = -1,
      label = paste0(
        "r = ", round(skipcors["ev"], 3), 
        " [",  paste0(round(skipcors[c("lb", "ub")], 3), collapse = " "), "]"
      ),
      color = ifelse(sum(skipcors[c("lb", "ub")] < 0) == 1, "black", "red"),
      size = 2.5
    ) +
    ggtitle(.parcel.hemi)
}

# get.community.cors <- function(.community.short, .variable, .p.threshold = 0.05) {
#   results.community <- results %>% 
#     filter(community.short %in% .community.short, variable == .variable, p.adj.roi < .p.threshold)
#   coefs.community <- coefs %>% 
#     filter(
#       variable == .variable, 
#       parcel.hemi %in% results.community$parcel.hemi[results.community$variable == .variable]
#       ) %>%
#     full_join(behav, by = "subj") %>%
#     group_by(parcel.hemi) %>%
#     summarize(
#       rho.bb = cor(rho, rt, method = "spearman"),
#       p.bb    = cor.test(rho, rt, method = "spearman")$p.value
#       ) %>%
#     mutate(p.adj.bb = p.adjust(p.bb, method = "holm"))
#   results.community %>%
#     full_join(coefs.community, by = "parcel.hemi") %>%
#     arrange(variable, parcel, hemi) %>% 
#     select(parcel:variable, community, is.roi, rho, p.adj.roi, rho.bb, p.adj.bb)
# }
# 
# get.multiparcel.cors <- function(.cluster, .variable) {
#   results.community <- results.multiparcel %>% filter(parcel.hemi %in% .cluster, variable == .variable)
#   coefs.community <- coefs.multiparcel %>%
#     filter(
#       variable == .variable,
#       parcel.hemi %in% results.community$parcel.hemi[results.community$variable == .variable]
#       ) %>%
#     full_join(behav, by = "subj") %>%
#     group_by(parcel.hemi) %>%
#     summarize(
#       rho.bb = cor(rho, rt, method = "spearman"),
#       p.bb   = cor.test(rho, rt, method = "spearman")$p.value,
#       ci95lb = skipcor(rho, rt)["spearman", "lb"],
#       ci95ub = skipcor(rho, rt)["spearman", "ub"]
#       ) %>%
#     mutate(p.adj.bb = p.adjust(p.bb, method = "holm"))
#   results.community %>%
#     full_join(coefs.community, by = "parcel.hemi") %>%
#     arrange(variable, parcel, hemi) %>%
#     ungroup %>%
#     select(parcel:variable, parcel.ave = rho, p.adj, rho.bb, p.adj.bb, ci95lb, ci95ub)
# }

get.coefs <- function(.region, .variable = c("congruency", "distractor", "target"), .by.parcel = FALSE) {
  # .region = "evis"
  
  if (.by.parcel) {
    parcels <- unlist(clusters[paste0(.region, c(".l", ".r"))])
    .data <- coefs %>% filter(parcel.hemi %in% parcels, variable %in% .variable)
  } else {
    .data <- coefs.multiparcel %>% filter(parcel == .region, variable %in% .variable)
  }
  
  .data %>% full_join(behav, by = "subj")

}

cor.table <- function(.data, .by.parcel = FALSE) {
  # .region = "evis"; .data = coefs.evis
  
  if (.by.parcel) {
    # parcels <- unlist(clusters[paste0(.region, c(".l", ".r"))])
    # .data <- coefs %>% filter(parcel.hemi %in% parcels, variable %in% .variable)
    .results <- results %>% 
      ungroup %>%
      # filter(parcel.hemi %in% parcels, variable %in% .variable) %>%
      select(parcel.hemi, variable, stat = rho, p = rho.srtest.p)
  } else {
    # .data <- coefs.multiparcel %>% filter(parcel == .region, variable %in% .variable)
    .results <- results.multiparcel %>% 
      # filter(parcel == .region, variable == .variable) %>%
      select(parcel.hemi, variable, stat = rho, p = rho.srtest.p)
  }
  
  .table <- .data %>%
    # full_join(behav, by = "subj") %>%
    group_by(parcel.hemi, variable) %>%
    rename(stat = rho) %>%
    summarize(
      rho   = cor(stat, rt, method = "spearman"),
      p.rho = cor.test(stat, rt, method = "spearman")$p.value,
      r     = cor(stat, rt),
      p.r   = cor.test(stat, rt)$p.value
      ) %>%
    group_by(variable) %>%
    mutate(
      p.rho.adj = p.adjust(p.rho, method = "fdr"), 
      p.r.adj   = p.adjust(p.r, method = "fdr")
      )
  
  right_join(.results, .table, by = c("parcel.hemi", "variable")) %>%
    arrange(variable, parcel.hemi) %>% 
    ungroup

}



regs <- function(.data, n.iter = 10000) {

  ## prep data (wide form):
  .data <-.data %>% select(subj, parcel.hemi, variable, rho, rt) %>% tidyr::spread(variable, rho)
  .data[c("congruency", "distractor", "target")] <- atanh(.data[c("congruency", "distractor", "target")])
  
  ## fit model:
  emp <- as.data.frame(coef(summary((lm(rt ~ congruency + distractor + target, .data)))))
  names(emp) <- c("b", "se", "t", "p")
  rownames(emp)[1] <- "intercept"
  emp <- tibble::rownames_to_column(emp, "term")
  
  ## non-paramtric bootstrap (resample raw data):
  boots <- matrix(nrow = n.iter, ncol = 4) 
  colnames(boots) <- c("intercept", "congruency", "distractor", "target")
  for (ii in seq_len(n.iter)) {
    samp.ii <- sample.int(nrow(.data), replace = TRUE)
    boots[ii, ] <- coef(lm(rt ~ congruency + distractor + target, .data[samp.ii, ]))
  }
  
  ## get CIs:
  lb <- (1 / 20 * n.iter) / 2
  ub <- n.iter - lb
  ci95lb <- apply(boots, 2, function(x) sort(x)[lb])
  ci95ub <- apply(boots, 2, function(x) sort(x)[ub])

  ## return:
  cbind(emp,data.frame(ci95lb, ci95ub))

}


reg.table <- function(.x, ...) {
  ## wrapper for regs()
  .x %>%
    split(.$parcel.hemi) %>%
    purrr::map(regs) %>%
    bind_rows(.id = "parcel.hemi")
}


textable <- function(.data) {
  ## wrapper for kable
  kableExtra::kable_styling(
    kable(.data, format = "latex", digits = 2, booktabs = TRUE), 
    latex_options = "hold_position", font_size = 10
    )
}

@


\section{fit behavioral model}


<<fit-mod, echo = TRUE>>=

## prep behavioral data for analysis:
stroop.pro.rt <- stroop.pro %>% 
  filter(acc == 1, !is.na(rt), rt < 3000, rt > 250)  %>%
  group_by(subj) %>%
  mutate(is.sd3.5 = abs(rt - mean(rt)) > 3.5 * sd(rt))
## some subjects show strange 500ms RT clustering; 
## looks like artifact not completely removed by low-pass filter
# stroop.rt <- stroop.rt[!(stroop.rt$subj %in% c("849971", "161832") & stroop.rt$rt < 500), ]

stroop.pro.er <- stroop.pro %>% filter(!is.na(acc))

## fit models:
mrt.base <- lmer(
  rt ~ trial.type + (trial.type | subj) + (trial.type | color), 
  stroop.pro.rt, subset = !is.sd3.5, control = lmer.cl
  )

mer.base <- glmer(
  er ~ trial.type + (trial.type | subj), 
  stroop.pro.er, family = "binomial", control = glmer.cl
  )

@


<<plot-coefs>>=

behav <- full_join(
    coef(mrt.base)$subj %>%
      tibble::rownames_to_column("subj") %>%
      select(subj, rt = trial.typei),
    coef(mer.base)$subj %>%
      tibble::rownames_to_column("subj") %>%
      select(subj, er = trial.typei),
    by = "subj"
  )

@


\section{roi analyses}

\subsection{early visual cortex}

Hypotheses: 
\begin{itemize}
  \item $+$distractor $\sim$ stroop rt
  \item $-$target $\sim$ stroop rt
\end{itemize}

<<results = TRUE>>=
clusters[c("evis.l", "evis.r")]
@

\subsubsection{aggregate (multi-parcel)}

\textbf{bivariate correlation models}

<<evis-pairs, results = TRUE, fig.height = 3.25, fig.width = 6>>=

coefs.evis <- get.coefs("evis")
plot.pairs(coefs.evis, "evis")
textable(cor.table(coefs.evis))

@

<<evis-bivar, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.evis, "distractor", "evis_l"),
    plot.bivar(coefs.evis, "distractor", "evis_r"),
    plot.bivar(coefs.evis, "target", "evis_l"),
    plot.bivar(coefs.evis, "target", "evis_r"),
    plot.bivar(coefs.evis, "congruency", "evis_l"),
    plot.bivar(coefs.evis, "congruency", "evis_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.evis, "distractor", "evis_l", .statistic = "pearson"),
    plot.bivar(coefs.evis, "distractor", "evis_r", .statistic = "pearson"),
    plot.bivar(coefs.evis, "target", "evis_l", .statistic = "pearson"),
    plot.bivar(coefs.evis, "target", "evis_r", .statistic = "pearson"),
    plot.bivar(coefs.evis, "congruency", "evis_l", .statistic = "pearson"),
    plot.bivar(coefs.evis, "congruency", "evis_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<evis-regress, results = TRUE>>=
textable(reg.table(coefs.evis))
@


\newpage
\subsection{ventral visual cortex}

Hypotheses: 
\begin{itemize}
  \item $+$distractor $\sim$ stroop rt
  \item $-$target $\sim$ stroop rt
  \item congruency?
\end{itemize}

<<results = TRUE>>=
clusters[c("vvis.l", "vvis.r")]
@

\subsubsection{aggregate (multi-parcel)}

\textbf{bivariate correlation models}

<<vvis-pairs, results = TRUE, fig.height = 3.25, fig.width = 6>>=

coefs.vvis <- get.coefs("vvis")
plot.pairs(coefs.vvis, "vvis")
textable(cor.table(coefs.vvis))

@

<<vvis-bivar, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.vvis, "distractor", "vvis_l"),
    plot.bivar(coefs.vvis, "distractor", "vvis_r"),
    plot.bivar(coefs.vvis, "target", "vvis_l"),
    plot.bivar(coefs.vvis, "target", "vvis_r"),
    plot.bivar(coefs.vvis, "congruency", "vvis_l"),
    plot.bivar(coefs.vvis, "congruency", "vvis_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.vvis, "distractor", "vvis_l", .statistic = "pearson"),
    plot.bivar(coefs.vvis, "distractor", "vvis_r", .statistic = "pearson"),
    plot.bivar(coefs.vvis, "target", "vvis_l", .statistic = "pearson"),
    plot.bivar(coefs.vvis, "target", "vvis_r", .statistic = "pearson"),
    plot.bivar(coefs.vvis, "congruency", "vvis_l", .statistic = "pearson"),
    plot.bivar(coefs.vvis, "congruency", "vvis_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<vvis-regress, results = TRUE>>=
textable(reg.table(coefs.vvis))
@

\newpage
\subsubsection{parcel-wise}

Congruency coding and stroop RT in vetral visual parcels:

\textbf{bivariate correlation models}

<<vvis-parcels, results = TRUE>>=

coefs.vvis.parcels <- get.coefs("vvis", .by.parcel = TRUE)
textable(cor.table(coefs.vvis.parcels, .by.parcel = TRUE))

@

<<vvis-v8, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  top = "V8 r + l",
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.vvis.parcels, "distractor", "V8_r"),
    plot.bivar(coefs.vvis.parcels, "distractor", "V8_l"),
    plot.bivar(coefs.vvis.parcels, "target", "V8_r"),
    plot.bivar(coefs.vvis.parcels, "target", "V8_l"),
    plot.bivar(coefs.vvis.parcels, "congruency", "V8_r"),
    plot.bivar(coefs.vvis.parcels, "congruency", "V8_l"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.vvis.parcels, "distractor", "V8_r", .statistic = "pearson"),
    plot.bivar(coefs.vvis.parcels, "distractor", "V8_l", .statistic = "pearson"),
    plot.bivar(coefs.vvis.parcels, "target", "V8_r", .statistic = "pearson"),
    plot.bivar(coefs.vvis.parcels, "target", "V8_l", .statistic = "pearson"),
    plot.bivar(coefs.vvis.parcels, "congruency", "V8_r", .statistic = "pearson"),
    plot.bivar(coefs.vvis.parcels, "congruency", "V8_l", .statistic = "pearson"),
    ncol = 2
  ),
  ncol = 2
)

@

<<vvis-vmv2-r, fig.height = 4.5, fig.width = 3.5>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.vvis.parcels, "distractor", "VMV2_r"),
    plot.bivar(coefs.vvis.parcels, "target", "VMV2_r"),
    plot.bivar(coefs.vvis.parcels, "congruency", "VMV2_r"),
    ncol = 1
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.vvis.parcels, "distractor", "VMV2_r", .statistic = "pearson"),
    plot.bivar(coefs.vvis.parcels, "target", "VMV2_r", .statistic = "pearson"),
    plot.bivar(coefs.vvis.parcels, "congruency", "VMV2_r", .statistic = "pearson"),
    ncol = 1
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<vvis-parcels-regress, results = TRUE>>=
textable(reg.table(coefs.vvis.parcels %>% filter(parcel.hemi %in% c("VMV2_r", "V8_r"))))
@



\newpage
\subsection{intra-parietal cortex}

Hypotheses: 
\begin{itemize}
  \item $+$distractor $\sim$ stroop rt
  \item $-$target $\sim$ stroop rt
  \item congruency???
\end{itemize}

<<results = TRUE>>=
clusters[c("ips.l", "ips.r")]
@

\subsubsection{aggregate (multi-parcel)}

\textbf{bivariate correlation models}

<<ips-pairs, results = TRUE, fig.height = 3.25, fig.width = 6>>=

coefs.ips <- get.coefs("ips")
plot.pairs(coefs.ips, "ips")
textable(cor.table(coefs.ips))

@

<<ips-bivar, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.ips, "distractor", "ips_l"),
    plot.bivar(coefs.ips, "distractor", "ips_r"),
    plot.bivar(coefs.ips, "target", "ips_l"),
    plot.bivar(coefs.ips, "target", "ips_r"),
    plot.bivar(coefs.ips, "congruency", "ips_l"),
    plot.bivar(coefs.ips, "congruency", "ips_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.ips, "distractor", "ips_l", .statistic = "pearson"),
    plot.bivar(coefs.ips, "distractor", "ips_r", .statistic = "pearson"),
    plot.bivar(coefs.ips, "target", "ips_l", .statistic = "pearson"),
    plot.bivar(coefs.ips, "target", "ips_r", .statistic = "pearson"),
    plot.bivar(coefs.ips, "congruency", "ips_l", .statistic = "pearson"),
    plot.bivar(coefs.ips, "congruency", "ips_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<ips-regress, results = TRUE>>=
textable(reg.table(coefs.ips))
@

\newpage
\subsubsection{parcel-wise}

Target coding in intraparietal cortex.

\textbf{bivariate correlation models}

<<ips-parcels, results = TRUE>>=

coefs.ips.parcels <- get.coefs("ips", .by.parcel = TRUE)
textable(cor.table(coefs.ips.parcels, .by.parcel = TRUE))

@

<<ips-ip1, fig.height = 4.5, fig.width = 3.5>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.ips.parcels, "distractor", "IP1_r"),
    plot.bivar(coefs.ips.parcels, "target", "IP1_r"),
    plot.bivar(coefs.ips.parcels, "congruency", "IP1_r"),
    ncol = 1
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.ips.parcels, "distractor", "IP1_r", .statistic = "pearson"),
    plot.bivar(coefs.ips.parcels, "target", "IP1_r", .statistic = "pearson"),
    plot.bivar(coefs.ips.parcels, "congruency", "IP1_r", .statistic = "pearson"),
    ncol = 1
  ),
  ncol = 2
)

@

<<ips-7pc, fig.height = 4.5, fig.width = 3.5>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.ips.parcels, "distractor", "7PC_r"),
    plot.bivar(coefs.ips.parcels, "target", "7PC_r"),
    plot.bivar(coefs.ips.parcels, "congruency", "7PC_r"),
    ncol = 1
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.ips.parcels, "distractor", "7PC_r", .statistic = "pearson"),
    plot.bivar(coefs.ips.parcels, "target", "7PC_r", .statistic = "pearson"),
    plot.bivar(coefs.ips.parcels, "congruency", "7PC_r", .statistic = "pearson"),
    ncol = 1
  ),
  ncol = 2
)

@


<<ips-7pl, fig.height = 4.5, fig.width = 3.5>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.ips.parcels, "distractor", "7PL_r"),
    plot.bivar(coefs.ips.parcels, "target", "7PL_r"),
    plot.bivar(coefs.ips.parcels, "congruency", "7PL_r"),
    ncol = 1
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.ips.parcels, "distractor", "7PL_r", .statistic = "pearson"),
    plot.bivar(coefs.ips.parcels, "target", "7PL_r", .statistic = "pearson"),
    plot.bivar(coefs.ips.parcels, "congruency", "7PL_r", .statistic = "pearson"),
    ncol = 1
  ),
  ncol = 2
)

@


\textbf{mutliple regression models}

<<ips-parcel-regress, results = TRUE>>=
textable(reg.table(coefs.ips.parcels %>% filter(parcel.hemi %in% c("7PC_r", "7PL_r", "IP1_r"))))
@


\newpage
\subsection{premotor + motor cortex}

Hypotheses: 
\begin{itemize}
  \item $+$distractor $\sim$ stroop rt
  \item $-$target $\sim$ stroop rt
  \item $+$congruency $\sim$ stroop rt
\end{itemize}

<<results = TRUE>>=
# clusters[c("premotor.l", "premotor.r")]
clusters[c("premotorv4.l", "premotorv4.r")]
@

\subsubsection{aggregate (multi-parcel)}

\textbf{bivariate correlation models}

<<premotor-pairs, results = TRUE, fig.height = 3.25, fig.width = 6>>=

coefs.premotor <- get.coefs("premotorv4")
plot.pairs(coefs.premotor, "premotorv4")
textable(cor.table(coefs.premotor))

@

<<premotor-bivar, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.premotor, "distractor", "premotorv4_l"),
    plot.bivar(coefs.premotor, "distractor", "premotorv4_r"),
    plot.bivar(coefs.premotor, "target", "premotorv4_l"),
    plot.bivar(coefs.premotor, "target", "premotorv4_r"),
    plot.bivar(coefs.premotor, "congruency", "premotorv4_l"),
    plot.bivar(coefs.premotor, "congruency", "premotorv4_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.premotor, "distractor", "premotorv4_l", .statistic = "pearson"),
    plot.bivar(coefs.premotor, "distractor", "premotorv4_r", .statistic = "pearson"),
    plot.bivar(coefs.premotor, "target", "premotorv4_l", .statistic = "pearson"),
    plot.bivar(coefs.premotor, "target", "premotorv4_r", .statistic = "pearson"),
    plot.bivar(coefs.premotor, "congruency", "premotorv4_l", .statistic = "pearson"),
    plot.bivar(coefs.premotor, "congruency", "premotorv4_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<premotor-regress, results = TRUE>>=
textable(reg.table(coefs.premotor))
@

\newpage
\subsubsection{parcel-wise}

\textbf{bivariate correlation models}

<<premotor-parcels, results = TRUE>>=

coefs.premotor.parcels <- get.coefs("premotorv4", .by.parcel = TRUE)
textable(cor.table(coefs.premotor.parcels, .by.parcel = TRUE))

@

<<premotor-pef, fig.height = 4.5, fig.width = 3.5>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.premotor.parcels, "distractor", "PEF_l"),
    plot.bivar(coefs.premotor.parcels, "target", "PEF_l"),
    plot.bivar(coefs.premotor.parcels, "congruency", "PEF_l"),
    ncol = 1
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.premotor.parcels, "distractor", "PEF_l", .statistic = "pearson"),
    plot.bivar(coefs.premotor.parcels, "target", "PEF_l", .statistic = "pearson"),
    plot.bivar(coefs.premotor.parcels, "congruency", "PEF_l", .statistic = "pearson"),
    ncol = 1
  ),
  ncol = 2
)

@

<<premotor-4, fig.height = 4.5, fig.width = 3.5>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.premotor.parcels, "distractor", "4_l"),
    plot.bivar(coefs.premotor.parcels, "distractor", "4_r"),
    plot.bivar(coefs.premotor.parcels, "target", "4_l"),
    plot.bivar(coefs.premotor.parcels, "target", "4_r"),
    plot.bivar(coefs.premotor.parcels, "congruency", "4_l"),
    plot.bivar(coefs.premotor.parcels, "congruency", "4_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.premotor.parcels, "distractor", "4_l", .statistic = "pearson"),
    plot.bivar(coefs.premotor.parcels, "distractor", "4_r", .statistic = "pearson"),
    plot.bivar(coefs.premotor.parcels, "target", "4_l", .statistic = "pearson"),
    plot.bivar(coefs.premotor.parcels, "target", "4_r", .statistic = "pearson"),
    plot.bivar(coefs.premotor.parcels, "congruency", "4_l", .statistic = "pearson"),
    plot.bivar(coefs.premotor.parcels, "congruency", "4_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<premotor-parcel-regress, results = TRUE>>=
textable(reg.table(coefs.premotor.parcels %>% filter(parcel.hemi %in% c("PEF_l", "4_r", "4_l"))))
@


\newpage
\subsection{inferior frontal cortex}

Hypotheses: 
\begin{itemize}
  \item $+$distractor $\sim$ stroop rt
  \item $-$target $\sim$ stroop rt
  \item $+$congruency $\sim$ stroop rt
\end{itemize}

<<results = TRUE>>=
clusters[c("ifc.l", "ifc.r")]
@

\subsubsection{aggregate (multi-parcel)}

\textbf{bivariate correlation models}

<<ifc-pairs, results = TRUE, fig.height = 3.25, fig.width = 6>>=

coefs.ifc <- get.coefs("ifc")
plot.pairs(coefs.ifc, "ifc")
textable(cor.table(coefs.ifc))

@

<<ifc-bivar, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.ifc, "distractor", "ifc_l"),
    plot.bivar(coefs.ifc, "distractor", "ifc_r"),
    plot.bivar(coefs.ifc, "target", "ifc_l"),
    plot.bivar(coefs.ifc, "target", "ifc_r"),
    plot.bivar(coefs.ifc, "congruency", "ifc_l"),
    plot.bivar(coefs.ifc, "congruency", "ifc_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.ifc, "distractor", "ifc_l", .statistic = "pearson"),
    plot.bivar(coefs.ifc, "distractor", "ifc_r", .statistic = "pearson"),
    plot.bivar(coefs.ifc, "target", "ifc_l", .statistic = "pearson"),
    plot.bivar(coefs.ifc, "target", "ifc_r", .statistic = "pearson"),
    plot.bivar(coefs.ifc, "congruency", "ifc_l", .statistic = "pearson"),
    plot.bivar(coefs.ifc, "congruency", "ifc_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<ifc-regress, results = TRUE>>=
textable(reg.table(coefs.ifc))
@

\newpage
\subsubsection{parcel-wise}

\textbf{bivariate correlation models}

<<ifc-parcels, results = TRUE>>=

coefs.ifc.parcels <- get.coefs("ifc", .by.parcel = TRUE)
textable(cor.table(coefs.ifc.parcels, .by.parcel = TRUE))

@


\newpage
\subsection{dorsolateral prefrontal cortex}

Hypotheses: 
\begin{itemize}
  \item $+$distractor $\sim$ stroop rt
  \item $-$target $\sim$ stroop rt
  \item $+$congruency $\sim$ stroop rt
\end{itemize}

<<results = TRUE>>=
clusters[c("dlpfc.l", "dlpfc.r")]
@

\subsubsection{aggregate (multi-parcel)}

\textbf{bivariate correlation models}

<<dlpfc-pairs, results = TRUE, fig.height = 3.25, fig.width = 6>>=

coefs.dlpfc <- get.coefs("dlpfc")
plot.pairs(coefs.dlpfc, "dlpfc")
textable(cor.table(coefs.dlpfc))

@

<<dlpfc-bivar, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.dlpfc, "distractor", "dlpfc_l"),
    plot.bivar(coefs.dlpfc, "distractor", "dlpfc_r"),
    plot.bivar(coefs.dlpfc, "target", "dlpfc_l"),
    plot.bivar(coefs.dlpfc, "target", "dlpfc_r"),
    plot.bivar(coefs.dlpfc, "congruency", "dlpfc_l"),
    plot.bivar(coefs.dlpfc, "congruency", "dlpfc_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.dlpfc, "distractor", "dlpfc_l", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc, "distractor", "dlpfc_r", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc, "target", "dlpfc_l", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc, "target", "dlpfc_r", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc, "congruency", "dlpfc_l", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc, "congruency", "dlpfc_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<dlpfc-regress, results = TRUE>>=
textable(reg.table(coefs.dlpfc))
@

\newpage
\subsubsection{parcel-wise}

\textbf{bivariate correlation models}

<<dlpfc-parcels, results = TRUE>>=

coefs.dlpfc.parcels <- get.coefs("dlpfc", .by.parcel = TRUE)
textable(cor.table(coefs.dlpfc.parcels, .by.parcel = TRUE))

@


<<dlpfc-p9-46v, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  top = "p9-46v r + l",
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.dlpfc.parcels, "distractor", "p9-46v_r"),
    plot.bivar(coefs.dlpfc.parcels, "distractor", "p9-46v_l"),
    plot.bivar(coefs.dlpfc.parcels, "target", "p9-46v_r"),
    plot.bivar(coefs.dlpfc.parcels, "target", "p9-46v_l"),
    plot.bivar(coefs.dlpfc.parcels, "congruency", "p9-46v_r"),
    plot.bivar(coefs.dlpfc.parcels, "congruency", "p9-46v_l"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.dlpfc.parcels, "distractor", "p9-46v_r", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc.parcels, "distractor", "p9-46v_l", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc.parcels, "target", "p9-46v_r", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc.parcels, "target", "p9-46v_l", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc.parcels, "congruency", "p9-46v_r", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc.parcels, "congruency", "p9-46v_l", .statistic = "pearson"),
    ncol = 2
  ),
  ncol = 2
)


@

<<dlpfc-i6-8, fig.height = 4.5, fig.width = 3.5>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.dlpfc.parcels, "distractor", "i6-8_r"),
    plot.bivar(coefs.dlpfc.parcels, "target", "i6-8_r"),
    plot.bivar(coefs.dlpfc.parcels, "congruency", "i6-8_r"),
    ncol = 1
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.dlpfc.parcels, "distractor", "i6-8_r", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc.parcels, "target", "i6-8_r", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc.parcels, "congruency", "i6-8_r", .statistic = "pearson"),
    ncol = 1
  ),
  ncol = 2
)

@

<<dlpfc-8av, fig.height = 4.5, fig.width = 3.5>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.dlpfc.parcels, "distractor", "8Av_r"),
    plot.bivar(coefs.dlpfc.parcels, "target", "8Av_r"),
    plot.bivar(coefs.dlpfc.parcels, "congruency", "8Av_r"),
    ncol = 1
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.dlpfc.parcels, "distractor", "8Av_r", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc.parcels, "target", "8Av_r", .statistic = "pearson"),
    plot.bivar(coefs.dlpfc.parcels, "congruency", "8Av_r", .statistic = "pearson"),
    ncol = 1
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<dlpfc-parcel-regress, results = TRUE>>=
textable(reg.table(coefs.dlpfc.parcels %>% filter(parcel.hemi %in% c("i6-8_r", "8Av_r", "p9-46v_r", "p9-46v_l"))))
@


\newpage
\subsection{medial prefrontal cortex}

Hypotheses: 
\begin{itemize}
  \item $+$distractor $\sim$ stroop rt
  \item $-$target $\sim$ stroop rt
  \item $+$congruency $\sim$ stroop rt
\end{itemize}

<<results = TRUE>>=
clusters[c("mpfc.l", "mpfc.r")]
@

\subsubsection{aggregate (multi-parcel)}

\textbf{bivariate correlation models}

<<mpfc-pairs, results = TRUE, fig.height = 3.25, fig.width = 6>>=

coefs.mpfc <- get.coefs("mpfc")
plot.pairs(coefs.mpfc, "mpfc")
textable(cor.table(coefs.mpfc))

@

<<mpfc-bivar, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.mpfc, "distractor", "mpfc_l"),
    plot.bivar(coefs.mpfc, "distractor", "mpfc_r"),
    plot.bivar(coefs.mpfc, "target", "mpfc_l"),
    plot.bivar(coefs.mpfc, "target", "mpfc_r"),
    plot.bivar(coefs.mpfc, "congruency", "mpfc_l"),
    plot.bivar(coefs.mpfc, "congruency", "mpfc_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.mpfc, "distractor", "mpfc_l", .statistic = "pearson"),
    plot.bivar(coefs.mpfc, "distractor", "mpfc_r", .statistic = "pearson"),
    plot.bivar(coefs.mpfc, "target", "mpfc_l", .statistic = "pearson"),
    plot.bivar(coefs.mpfc, "target", "mpfc_r", .statistic = "pearson"),
    plot.bivar(coefs.mpfc, "congruency", "mpfc_l", .statistic = "pearson"),
    plot.bivar(coefs.mpfc, "congruency", "mpfc_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<mpfc-regress, results = TRUE>>=
textable(reg.table(coefs.mpfc))
@

\newpage
\subsubsection{parcel-wise}

\textbf{bivariate correlation models}

<<mpfc-parcels, results = TRUE>>=

coefs.mpfc.parcels <- get.coefs("mpfc", .by.parcel = TRUE)
textable(cor.table(coefs.mpfc.parcels, .by.parcel = TRUE))

@

\newpage
\subsection{insular cortex}

Hypotheses: 
\begin{itemize}
  \item $+$distractor $\sim$ stroop rt
  \item $-$target $\sim$ stroop rt
  \item $+$congruency $\sim$ stroop rt
\end{itemize}

<<results = TRUE>>=
clusters[c("ins.l", "ins.r")]
@

\subsubsection{aggregate (multi-parcel)}

\textbf{bivariate correlation models}

<<ins-pairs, results = TRUE, fig.height = 3.25, fig.width = 6>>=

coefs.ins <- get.coefs("ins")
plot.pairs(coefs.ins, "ins")
textable(cor.table(coefs.ins))

@

<<ins-bivar, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.ins, "distractor", "ins_l"),
    plot.bivar(coefs.ins, "distractor", "ins_r"),
    plot.bivar(coefs.ins, "target", "ins_l"),
    plot.bivar(coefs.ins, "target", "ins_r"),
    plot.bivar(coefs.ins, "congruency", "ins_l"),
    plot.bivar(coefs.ins, "congruency", "ins_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.ins, "distractor", "ins_l", .statistic = "pearson"),
    plot.bivar(coefs.ins, "distractor", "ins_r", .statistic = "pearson"),
    plot.bivar(coefs.ins, "target", "ins_l", .statistic = "pearson"),
    plot.bivar(coefs.ins, "target", "ins_r", .statistic = "pearson"),
    plot.bivar(coefs.ins, "congruency", "ins_l", .statistic = "pearson"),
    plot.bivar(coefs.ins, "congruency", "ins_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<ins-regress, results = TRUE>>=
textable(reg.table(coefs.ins))
@

\newpage
\subsubsection{parcel-wise}

\textbf{bivariate correlation models}

<<ins-parcels, results = TRUE>>=

coefs.ins.parcels <- get.coefs("ins", .by.parcel = TRUE)
textable(cor.table(coefs.ins.parcels, .by.parcel = TRUE))

@



\newpage
\subsection{hcp's `language' network}

Hypotheses: 
\begin{itemize}
  \item $+$distractor $\sim$ stroop rt
  \item $-$target $\sim$ stroop rt
  \item $+$congruency $\sim$ stroop rt
\end{itemize}

<<results = TRUE>>=
clusters[c("lang.l", "lang.r")]
@

\subsubsection{aggregate (multi-parcel)}

\textbf{bivariate correlation models}

<<lang-pairs, results = TRUE, fig.height = 3.25, fig.width = 6>>=

coefs.lang <- get.coefs("lang")
plot.pairs(coefs.lang, "lang")
textable(cor.table(coefs.lang))

@

<<lang-bivar, fig.height = 4.5, fig.width = 7>>=

grid.arrange(
  arrangeGrob(
    top = "spearman",
    plot.bivar(coefs.lang, "distractor", "lang_l"),
    plot.bivar(coefs.lang, "distractor", "lang_r"),
    plot.bivar(coefs.lang, "target", "lang_l"),
    plot.bivar(coefs.lang, "target", "lang_r"),
    plot.bivar(coefs.lang, "congruency", "lang_l"),
    plot.bivar(coefs.lang, "congruency", "lang_r"),
    ncol = 2
  ),
  arrangeGrob(
    top = "pearson",
    plot.bivar(coefs.lang, "distractor", "lang_l", .statistic = "pearson"),
    plot.bivar(coefs.lang, "distractor", "lang_r", .statistic = "pearson"),
    plot.bivar(coefs.lang, "target", "lang_l", .statistic = "pearson"),
    plot.bivar(coefs.lang, "target", "lang_r", .statistic = "pearson"),
    plot.bivar(coefs.lang, "congruency", "lang_l", .statistic = "pearson"),
    plot.bivar(coefs.lang, "congruency", "lang_r", .statistic = "pearson"),
    ncol = 2 
  ),
  ncol = 2
)

@

\textbf{mutliple regression models}

<<lang-regress, results = TRUE>>=
textable(reg.table(coefs.lang))
@

\newpage
\subsubsection{parcel-wise}

\textbf{bivariate correlation models}

<<lang-parcels, results = TRUE>>=

coefs.lang.parcels <- get.coefs("lang", .by.parcel = TRUE)
textable(cor.table(coefs.lang.parcels, .by.parcel = TRUE))

@


%% scratch ----
%% 
%% 
% \subsubsection{parcel-wise}
% 
% <<evis-parcels, results = TRUE, fig.height = 2, fig.width = 4>>=
% 
% coefs.evis.parcels <- get.coefs("evis", .by.parcel = TRUE)
% 
% kable(cor.table(coefs.evis.parcels, .by.parcel = TRUE))
% plot.pairs(coefs.evis, "evis_l")
% plot.pairs(coefs.evis, "evis")
% 
% @
% 
% 
% \subsection{ventral visual cortex}
% 
% <<rois-vvis, fig.height = 5, fig.width = 4.5>>=
% 
% grid.arrange(
%   top = "congruency coding in ventral visual cortex \n spearman's top; pearson's bottom",
%   plot.bivar(
%     .variable = "congruency",
%     .parcel.hemi = "V8_l"
%     ),
%   plot.bivar(
%     .variable = "congruency",
%     .parcel.hemi = "VMV3_r"
%     ),
%   plot.bivar(
%     .variable = "congruency",
%     .parcel.hemi = "V8_l",
%     .statistic = "pearson"
%     ),
%   plot.bivar(
%     .variable = "congruency",
%     .parcel.hemi = "VMV3_r",
%     .statistic = "pearson"
%     )
% )
% 
% @
% 
% \subsection{inferior parietal sulcus and superior parietal lobe}
% 
% <<rois-ipl-spl>>=
% 
% kable(get.multiparcel.cors(c("vvis_l", "vvis_r"), .variable = "distractor"))
% kable(get.multiparcel.cors(c("vvis_l", "vvis_r"), .variable = "target"))
% kable(get.multiparcel.cors(c("vvis_l", "vvis_r"), .variable = "congruency"))
% 
% kable(get.community.cors(.community.short = c("v vis."), .variable = "target"))
% kable(get.community.cors(.community.short = c("v vis."), .variable = "congruency", .p.threshold = 1))
% 
% rois.mmp$community.short %>% unique
% kable(get.community.cors(.community.short = c("sP"), .variable = "congruency", .p.threshold = 1))
% kable(get.community.cors(.community.short = c("d vis."), .variable = "congruency", .p.threshold = 1))
% @


\end{document}